// Use this devcontainer.json to develop within WSL2 on Windows
// with WSLg providing the GUI support.
// It uses the prebuilt image from the GitHub Container Registry,
// so does not require a Dockerfile.
{
  "name": "auro-wsl",
  "image": "ghcr.io/uoy-robostar/ros2-tb3/auro-dev:latest",
  // These seem necessary to be able to see the GPU within WSL container.
  "runArgs": [
    "--device=/dev/dxg"
  ],
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspaces/${localWorkspaceFolderBasename},type=bind",
  "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
  "mounts": [
    "source=${localEnv:HOME}${localEnv:USERPROFILE},target=/home/ubuntu/homedir,type=bind",
    // Following are needed to get WSLg working
    "source=/usr/lib/wsl,target=/usr/lib/wsl,type=bind,readonly",
    "source=/run/desktop/mnt/host/wslg,target=/mnt/wslg,type=bind,readonly",
    "source=/run/desktop/mnt/host/wslg/.X11-unix,target=/tmp/.X11-unix,type=bind,readonly",
  ],
  "remoteUser": "ubuntu",
  "postStartCommand": "touch /workspaces/.bash_history && ln -s /workspaces/.bash_history /home/ubuntu/.bash_history",
  // Windows solution via WSL2: https://stackoverflow.com/questions/73092750/how-to-show-gui-apps-from-docker-desktop-container-on-windows-11/75392952#75392952
  "containerEnv": {
    "LD_LIBRARY_PATH": "/usr/lib/wsl/lib",
    "WAYLAND_DISPLAY": "wayland-0",
    "XDG_RUNTIME_DIR": "/mnt/wslg/runtime-dir",
    "DISPLAY": ":0",
    "PULSE_SERVER": "/mnt/wslg/PulseServer"
  }
}